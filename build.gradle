/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

dependencies {
	// https://mvnrepository.com/artifact/com.sun.jersey/jersey-servlet
	compile group: 'com.sun.jersey', name: 'jersey-servlet', version: '1.19.4'

	// https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-servlet
	compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.9.v20180320'

	// https://mvnrepository.com/artifact/org.glassfish.jersey.core/jersey-server
	compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.26'

    // https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-server
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.9.v20180320'

	// https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
	compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Jax-RS-HelloWorld',
                   'Implementation-Version': '1.0.0',
                   'Main-Class': 'au.id.dbrown.example.helloworld.Application'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}